{
    "collab_server" : "",
    "contents" : "#### Multi-logit Regression Model with new features and normalized data #####\nsubmit <- read.csv(\"samplesubmission.csv\")\ntrain <- read.csv(\"trainnormall_2.csv\")\ntest <- read.csv(\"testnormall_2.csv\")\n\ntrain <- train[,c(1:83,95:99,110:153)]\ntest <- test[,c(1:83,95:99,110:153)]\nset.seed(8)\ntrain<-train[sample(nrow(train)),]\nlibrary(\"mlogit\")\n#### Add new Variable to Train\ntrain$age1 <- as.numeric(train$Price1)*train$old\ntrain$age2 <- as.numeric(train$Price2)*train$old\ntrain$age3 <- as.numeric(train$Price3)*train$old\ntrain$age4 <- as.numeric(train$Price4)*train$old\ntrain$gender1 <- as.numeric(train$Price1)*train$gend\ntrain$gender2 <- as.numeric(train$Price2)*train$gend\ntrain$gender3 <- as.numeric(train$Price3)*train$gend\ntrain$gender4 <- as.numeric(train$Price4)*train$gend\ntrain$educ1 <- as.numeric(train$Price1)*train$educa\ntrain$educ2 <- as.numeric(train$Price2)*train$educa\ntrain$educ3 <- as.numeric(train$Price3)*train$educa\ntrain$educ4 <- as.numeric(train$Price4)*train$educa\ntrain$distance1 <- as.numeric(train$Price1)*train$distance\ntrain$distance2 <- as.numeric(train$Price2)*train$distance\ntrain$distance3 <- as.numeric(train$Price3)*train$distance\ntrain$distance4 <- as.numeric(train$Price4)*train$distance\ntrain$night1 <- as.numeric(train$NV1)*train$sleep\ntrain$night2 <- as.numeric(train$NV2)*train$sleep\ntrain$night3 <- as.numeric(train$NV3)*train$sleep\ntrain$night4 <- as.numeric(train$NV4)*train$sleep\ntrain$region1 <- as.numeric(train$Price1)*train$place\ntrain$region2 <- as.numeric(train$Price2)*train$place\ntrain$region3 <- as.numeric(train$Price3)*train$place\ntrain$region4 <- as.numeric(train$Price4)*train$place\ntrain$Urb1 <- as.numeric(train$Price1)*train$liveplace\ntrain$Urb2 <- as.numeric(train$Price2)*train$liveplace\ntrain$Urb3 <- as.numeric(train$Price3)*train$liveplace\ntrain$Urb4 <- as.numeric(train$Price4)*train$liveplace\ntrain$ppark1 <- as.numeric(train$Price1)*train$newpark\ntrain$ppark2 <- as.numeric(train$Price2)*train$newpark\ntrain$ppark3 <- as.numeric(train$Price3)*train$newpark\ntrain$ppark4 <- as.numeric(train$Price4)*train$newpark\ntrain$car1 <- as.numeric(train$Price1)*train$car\ntrain$car2<- as.numeric(train$Price2)*train$car\ntrain$car3 <- as.numeric(train$Price3)*train$car\ntrain$car4 <- as.numeric(train$Price4)*train$car\ntrain$money1 <- train$money/as.numeric(train$Price1)\ntrain$money2<- train$money/as.numeric(train$Price2)\ntrain$money3 <- train$money/as.numeric(train$Price3)\ntrain$money4 <- as.numeric(train$Price4)\ntrain$year1 <- as.numeric(train$Price1)*train$year\ntrain$year2<- as.numeric(train$Price2)*train$year\ntrain$year3 <- as.numeric(train$Price3)*train$year\ntrain$year4 <- as.numeric(train$Price4)*train$year\n#### normalize new variables in train\n\nfor (j in 110:153){\n  for (i in 1:nrow(train)){\n    train[i,j] <- ((train[i,j]-min(train[,j]))/(max(train[,j])-min(train[,j])))\n  }}\nfor (j in 4:63){\n  for (i in 1:nrow(train)){\n    train[i,j] <- ((train[i,j]-min(train[,j]))/(max(train[,j])-min(train[,j])))\n  }}\n\n\n# which(colnames(train)==\"age1\")\n# which(colnames(train)==\"year4\")\n#### create trainset with glm predicted probability\ntrainglm<-cbind(train,pred)\n#### create mlogit train data\nS <- mlogit.data(trainglm,shape=\"wide\",choice=\"Choice\",sep=\"\",varying=c(4:83,110:153),alt.levels=c(\"Ch1\",\"Ch2\",\"Ch3\",\"Ch4\"),id.var=\"Case\")\n#S <-S[,2:52]\n#S <- mlogit.data(train,shape=\"wide\",choice=\"Choice\",sep=\"\",varying=c(4:83,89:132),alt.levels=c(\"Ch1\",\"Ch2\",\"Ch3\",\"Ch4\"),id.var=\"Case\")\nS <- mlogit.data(train,shape=\"wide\",choice=\"Choice\",sep=\"\",varying=c(4:83,110:153),alt.levels=c(\"Ch1\",\"Ch2\",\"Ch3\",\"Ch4\"),id.var=\"Case\")\n#Randomly shuffle the train data\n#library(caTools)\n# set.seed(8)\n# spl <-sample.split(twittersparse$Neg,SplitRatio = 0.7)\n# train <-subset(twittersparse,spl==TRUE)\n# test <- subset(twittersparse,spl==FALSE)\n# set.seed(8)\n# S<-S[sample(nrow(S)),]\nwhich(is.na(S))\nfolds <- cut(seq(1,nrow(S)),breaks=10,labels=FALSE) #Create 10 equally size folds\n#?cut\n# Feature Set\n#FeatureSet <- c(\"CC\",\"GN\",\"NS\",\"BU\",\"FA\",\"LD\",\"BZ\",\"FC\",\"FP\",\"RP\",\"PP\",\"KA\",\"SC\",\"TS\",\"NV\",\"MA\",\"LB\",\"AF\",\"HU\",\"Price\",\"age\",\"gender\",\"educ\",\"distance\",\"night\",\"region\",\"Urb\",\"ppark\",\"money\",\"year\",\"car\")\n#length(FeatureSet)\n\n### Cross Validation\ntot <-0\nfor(k in 1:10){\n  #Segement your data by fold using the which() function\n  testIndexes <- which(folds==k,arr.ind=TRUE)\n  testData <- S[testIndexes, ]\n  trainData <- S[-testIndexes, ]\n  Mcv <- mlogit(Choice~GN+NS+BU+FA+LD+BZ+FC+FP+RP+PP+KA+SC+TS+NV+MA+LB+AF+HU+Price+age+gender+educ+money+region+Urb+ppark+night,data=trainData)\n  Pcv <- as.matrix(predict(Mcv, newdata = testData))\n  predglm <-subset(testData, testData$Choice==TRUE)[,c(\"pred1\",\"pred2\",\"pred3\",\"pred4\")]\n  Pmix <- Pcv\n  Pmix <- 0.95*Pcv +0.05*predglm\n  ActualChoice <- subset(testData, testData$Choice==TRUE)[,c(\"Ch1\",\"Ch2\",\"Ch3\",\"Ch4\")]\n  ActualChoice <-as.matrix(ActualChoice)\n  tot <- tot +(-1*mean(log(Pmix[model.matrix(~ ActualChoice + 0) - Pmix > 0])))\n  #Use the test and train data partitions however you desire...\n}\ntot/10\n\n#1.19179 pred+ original (0.9)\n#1.197947 original only\n#1.190847 age+gender+educ \n#1.185584 age+gender+educ & pred (0.9) \n#1.186941 age+gender+educ & pred (0.8)\n#1.189926 age+gender+educ+money\n#1.184549 age+gender+educ+money & pred(0.9)\n#1.183094 all-CC-car-night normalized segment+miles+night+educ+region+Urb 0.8\n#1.180877 all-CC-car-night normalized segment+miles+night+educ+region+Urb 0.9\n#1.180043 all-CC-car-night normalized partially segment+money+year+miles+night+gender+age+educ+region+Urb+ppark 0.9\n#1.181346 ‘’‘’ 0.8\n#1.187488 ‘’‘’ 0.7\n#1.181731 ‘’‘’‘ 0.95\n#1.181487 fs 0.9\n#1.181147 fs-CC-car 0.9\n# 1.181147 normalized all allglm -CC-car\n#*******************\n#1.180108 changed var 0.9\n#1.181659  normalized 0.9\n#1.181578 +night norm 0.9\n#1.181241 below 0.9\n#1.180232 below (new features)\n#1.179854 GN+NS+BU+FA+LD+BZ+FC+FP+RP+PP+KA+SC+TS+NV+MA+LB+AF+HU+Price+age+gender+educ+money+region+Urb+ppark\n#1.179972 all 31 features \n#1.179972 all 31 features-car-year\n#1.179936 all 31 features-car-year-CC GN+NS+BU+FA+LD+BZ+FC+FP+RP+PP+KA+SC+TS+NV+MA+LB+AF+HU+Price+age+gender+educ+money+region+Urb+ppark+night+distance\n#1.180053 all 31 features-car-year-night\n#1.180161 all 31 features-car-year-distance\n#1.180838 all 31 features 0.9\n#1.180893 all 31 features-car-year 0.9\n#1.180959 all 31 features-car-year-night 0.9\n#1.181172 all 31 features-car-year-distance 0.9\n#1.18087  all 31 features-car-year-CC 0.9\n\n\n#s<-cbind(train,pred)\n#S <- mlogit.data(s,shape=\"wide\",choice=\"Choice\",sep=\"\",varying=c(4:83,110:153),alt.levels=c(\"Ch1\",\"Ch2\",\"Ch3\",\"Ch4\"),id.var=\"Case\")\n#S<-S[,c(1:8,13:45)]\n#M_tot <- mlogit(Choice~CC+GN+NS+BU+FA+LD+BZ+FC+FP+RP+PP+KA+SC+TS+NV+MA+LB+AF+HU+Price+age+gender+educ+money+region+Urb+ppark+distance+night+year+car,data=trainData)\nM_tot <- mlogit(Choice~GN+NS+BU+FA+LD+BZ+FC+FP+RP+PP+KA+SC+TS+NV+MA+LB+AF+HU+Price+age+gender+educ+money+region+Urb+ppark+night,data=S)\n#M_tot <- mlogit(Choice~CC+GN+NS+BU+FA+LD+BZ+FC+FP+RP+PP+KA+SC+TS+NV+MA+LB+AF+HU+Price+age+gender+money,data=S)\nM_fs <- mlogit(Choice~GN+NS+BU+FA+LD+BZ+FC+FP+RP+PP+KA+SC+TS+NV+MA+LB+AF+HU+Price+age+gender+ppark+Urb,data=S)\nM_mix <-mlogit(Choice~CC+GN+NS+BU+FA+LD+BZ+FC+FP+RP+PP+KA+SC+TS+NV+MA+LB+AF+HU+Price+age+gender+educ,rpar=c(CC='n',GN='n',NS='n',BU='n',FA='n',LD='n',BZ='n',FC='n',FP='n',RP='n',PP='n',KA='n',SC='n',TS='n',NV='n',MA='n',LB='n',AF='n',HU='n',Price='n',age='n',gender='n',educ='n'),panel=TRUE,data=S)\nM_mix_1 <-mlogit(Choice~CC+GN+NS+BU+FA+LD+BZ+FC+FP+RP+PP+KA+SC+TS+NV+MA+LB+AF+HU+Price+age+gender+educ,rpar=c(age='n',gender='n',educ='n'),panel=TRUE,data=S)\n#M <- mlogit(Choice~\"CC+GN\",data=S)\nsummary(M_tot)\nsummary(M_fs)\nsummary(M_mix)\nsummary(M_mix_1)\nActualChoice <- train[,\"Choice\"]\nP <- predict(M_tot, newdata = S)\n#Prf <- read.csv(\"rf_predict_train_50.csv\")\nPredMix <- 0.9*P+0.1*pred\n#PredMix <- 0.9*P+0.1*pred\n(-1*mean(log(PredMix[model.matrix(~ ActualChoice + 0) - PredMix > 0])))\n(-1*mean(log(Prf[model.matrix(~ ActualChoice + 0) - Prf > 0])))\n# nrow(P)\n# length(PredictedChoice)\nPredictedChoice <- apply(PredMix, 1, which.max)\ntable(PredictedChoice, ActualChoice)\n#table(PredictedChoice)\n#?mlogit\n\n#### Add new variables to test\ntest$age1 <- as.numeric(test$Price1)*test$old\ntest$age2 <- as.numeric(test$Price2)*test$old\ntest$age3 <- as.numeric(test$Price3)*test$old\ntest$age4 <- as.numeric(test$Price4)*test$old\ntest$gender1 <- as.numeric(test$Price1)*test$gend\ntest$gender2 <- as.numeric(test$Price2)*test$gend\ntest$gender3 <- as.numeric(test$Price3)*test$gend\ntest$gender4 <- as.numeric(test$Price4)*test$gend\ntest$educ1 <- as.numeric(test$Price1)*test$educa\ntest$educ2 <- as.numeric(test$Price2)*test$educa\ntest$educ3 <- as.numeric(test$Price3)*test$educa\ntest$educ4 <- as.numeric(test$Price4)*test$educa\ntest$distance1 <- as.numeric(test$Price1)*test$distance\ntest$distance2 <- as.numeric(test$Price2)*test$distance\ntest$distance3 <- as.numeric(test$Price3)*test$distance\ntest$distance4 <- as.numeric(test$Price4)*test$distance\ntest$night1 <- as.numeric(test$NV1)*test$sleep\ntest$night2 <- as.numeric(test$NV2)*test$sleep\ntest$night3 <- as.numeric(test$NV3)*test$sleep\ntest$night4 <- as.numeric(test$NV4)*test$sleep\ntest$region1 <- as.numeric(test$Price1)*test$place\ntest$region2 <- as.numeric(test$Price2)*test$place\ntest$region3 <- as.numeric(test$Price3)*test$place\ntest$region4 <- as.numeric(test$Price4)*test$place\ntest$Urb1 <- as.numeric(test$Price1)*test$liveplace\ntest$Urb2 <- as.numeric(test$Price2)*test$liveplace\ntest$Urb3 <- as.numeric(test$Price3)*test$liveplace\ntest$Urb4 <- as.numeric(test$Price4)*test$liveplace\ntest$ppark1 <- as.numeric(test$Price1)*test$newpark\ntest$ppark2 <- as.numeric(test$Price2)*test$newpark\ntest$ppark3 <- as.numeric(test$Price3)*test$newpark\ntest$ppark4 <- as.numeric(test$Price4)*test$newpark\ntest$car1 <- as.numeric(test$Price1)*test$car\ntest$car2<- as.numeric(test$Price2)*test$car\ntest$car3 <- as.numeric(test$Price3)*test$car\ntest$car4 <- as.numeric(test$Price4)*test$car\ntest$money1 <- test$money/as.numeric(test$Price1)\ntest$money2<- test$money/as.numeric(test$Price2)\ntest$money3 <- test$money/as.numeric(test$Price3)\ntest$money4 <- as.numeric(test$Price4)\ntest$year1 <- as.numeric(test$Price1)*test$year\ntest$year2<- as.numeric(test$Price2)*test$year\ntest$year3 <- as.numeric(test$Price3)*test$year\ntest$year4 <- as.numeric(test$Price4)*test$year\n###normalize test\nwhich(colnames(test)==\"age1\")\nfor (j in 110:153){\n  for (i in 1:nrow(test)){\n    test[i,j] <- ((test[i,j]-min(test[,j]))/(max(test[,j])-min(test[,j])))\n  }}\nfor (j in 4:63){\n  for (i in 1:nrow(test)){\n    test[i,j] <- ((test[i,j]-min(test[,j]))/(max(test[,j])-min(test[,j])))\n  }}\n###\nfor (i in 1:nrow(test)){\n  test$Ch1 <-0\n  test$Ch2 <-1\n  test$Ch3 <-0\n  test$Ch4 <-0\n  test$Choice <- \"Ch2\"}\n#which(colnames(test)==\"age1\")\n## create the mlogit test data\nT <- mlogit.data(test,shape=\"wide\",choice=\"Choice\",sep=\"\",varying=c(4:83,110:153),alt.levels=c(\"Ch1\",\"Ch2\",\"Ch3\",\"Ch4\"),id.var=\"Case\")\nP2 <- predict(M_tot, newdata = T)\nP2\n#P2rf <- read.csv(\"rf_predict_test_50.csv\")\nP7 <- read.csv(\"samplesubmission7.csv\")\nP7<-P7[,c(2:5)]\nP2Mix <- 0.95*P2+0.05*predtest\nP2Mix <- 0.1*predtest+0.9*P2\nP2Mix\nPredictedChoiceTest <- apply(P2, 1, which.max)\nPredictedChoiceTest7 <- apply(P7, 1, which.max)\ntable(PredictedChoiceTest,PredictedChoiceTest7)\ntable(PredictedChoiceTest)\ntable(ActualChoice)\n\nnrow(P2)\nnrow(test)\nsubmit$Ch1 <- P2Mix[,1]\nsubmit$Ch2 <- P2Mix[,2]\nsubmit$Ch3 <- P2Mix[,3]\nsubmit$Ch4 <- P2Mix[,4]\nwrite.csv(submit, \"samplesubmission16.csv\")\n\n\nS_output <- subset(S, S$Choice==\"TRUE\")\nwrite.csv(S_output, \"S_ouput.csv\")\n",
    "created" : 1510638492474.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2517047834",
    "id" : "E8F79121",
    "lastKnownWriteTime" : 1510638078,
    "last_content_update" : 1510638515021,
    "path" : "~/Documents/SUTD Year 4/Analytics Edge/AEProject/Prediction_mlogit_2.R",
    "project_path" : "Prediction_mlogit_2.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}